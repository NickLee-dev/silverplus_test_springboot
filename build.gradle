plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.hexalab'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //스프링 부트 시큐리티 관련 기본 설정과 의존성 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //데이터의 유효성 검사용 어노테이션 제공
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //스프링 부트 웹 관련련 기본 설정과 의존성 기능 제공, Restful 관련 어노테이션 제공
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //oracle db 와 jpa 연결 설정
    //스프링과 연동되는 jpa 기술 관련 의존성 기능 제공
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //오라클 데이터베이스와 연동하기 위한 의존성 기능 제공
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'    //JWT 를 생성하고 검증하기 위한 라이브러리임
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'   //JWT 구현체를 런타임시 의존성 추가하는 라이브러리임
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'  //JSON 처리를 위한 Jackson과 연동되는  JJWT 의존성을 런타임시 추가함

    //롬복 기능을 어노테이션 방식으로 처리하는 라이브러리임
    compileOnly 'org.projectlombok:lombok'
    //개발시 유용한 도구(예: 자동 리스타터)를 제공하는 라이브러리임
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //스프링 부트의 설정과 관련된 어노테이션과 기능을 제공하는 라이브러리
    annotationProcessor 'org.projectlombok:lombok'
    //스프링 부트에 내장된 톰켓 라이브러리, 웹 에플리케이션 구동을 위한 라이브러리임
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    //테스트를 위한 라이브러리임. 테스트 코드 작성시 이용됨, 테스트 코드는 서버 구동없이 실행함
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // 넌뭐야
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // 무슨용도야?
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

////sourceSets
////gradle build 시 QClass 소스도 함께 build 하기 위해서 sourceSets 에 해당 위치를 추가해준다.
//def querydslSrcDir = 'src/main/generated'
//sourceSets {
//    main {
//        java {
//            srcDirs += [ querydslSrcDir ]
//        }
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
}



