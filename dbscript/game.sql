DROP TABLE card CASCADE CONSTRAINTS;
DROP TABLE player CASCADE CONSTRAINTS;
DROP TABLE player_cards CASCADE CONSTRAINTS;
DROP TABLE game_state CASCADE CONSTRAINTS;
DROP TABLE field_cards CASCADE CONSTRAINTS;
DROP TABLE deck_cards CASCADE CONSTRAINTS;
DROP TABLE score_log CASCADE CONSTRAINTS;




-- ī�� ���̺�  // ���� ���ӿ� ���Ǵ� ���ī��
CREATE TABLE card (
    id NUMBER PRIMARY KEY,
    month NUMBER(2) NOT NULL, -- ī���� �� (1 ~ 12)
    type VARCHAR2(10) NOT NULL, -- ī�� Ÿ�� (��, ��, ��, ���� ��)
    point NUMBER(5, 2) DEFAULT 0, -- ī�� ����
    is_special CHAR(1) DEFAULT 'N' CHECK (is_special IN ('Y', 'N')) -- Ư�� ī�� ����
);

comment on column card.id is 'ī�����ID';
comment on column card.month is 'ī���� ��';
comment on column card.type is 'ī�� Ÿ��';
comment on column card.point is 'ī�� ����';
comment on column card.is_special is 'Ư��ī�忩��';


-- ����� ���̺�  // ���ӿ� �����ϴ� �÷��̾� ����
CREATE TABLE player (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(50) NOT NULL, -- �÷��̾� �̸�
    score NUMBER DEFAULT 0, -- �÷��̾� ����
    is_turn CHAR(1) DEFAULT 'N' CHECK (is_turn IN ('Y', 'N')) -- ���� �� ����
);

comment on column player.id is '����ڰ���ID';
comment on column player.name is '������̸�';
comment on column player.score is '���������';
comment on column player.is_turn is '���� �� ����';


-- ����� ī�� ���̺�  // �÷��̾ ������ �ִ� ����� ����
CREATE TABLE player_cards (
    id NUMBER PRIMARY KEY,
    player_id NUMBER NOT NULL, -- �÷��̾� ID
    card_id NUMBER NOT NULL, -- ī�� ID
    type VARCHAR2(10) NOT NULL, -- ī�� ���� ('HAND' or 'COLLECTED')
    CONSTRAINT fk_player FOREIGN KEY (player_id) REFERENCES player(id),
    CONSTRAINT fk_card FOREIGN KEY (card_id) REFERENCES card(id)
);

comment on column player_cards.id is '����� ī�� ���� ID';
comment on column player_cards.player_id is '����� ���� ID';
comment on column player_cards.card_id is 'ī�� ���� ID';
comment on column player_cards.type is 'ī�� ����';


-- ���� ������� ���̺�  // ������ �������� ���¸� �����ϴ� ���̺�
CREATE TABLE game_state (
    id NUMBER PRIMARY KEY,
    turn_order NUMBER(1) DEFAULT 1, -- ���� �� ���� (1: �����, 2: AI)
    is_finished CHAR(1) DEFAULT 'N' CHECK (is_finished IN ('Y', 'N')) -- ���� ���� ����
);

comment on column game_state.id is '���� ������� ���� ID';
comment on column game_state.turn_order is '���� �� ����';
comment on column game_state.is_finished is '���� ���� ����';


-- ���� ī�� ���̺�  // ���� �ʵ忡 ������ ī�� ���
CREATE TABLE field_cards (
    id NUMBER PRIMARY KEY,
    game_id NUMBER NOT NULL, -- ���� ID
    card_id NUMBER NOT NULL, -- ī�� ID
    CONSTRAINT fk_game FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_card_field FOREIGN KEY (card_id) REFERENCES card(id)
);

comment on column field_cards.id is '���� ī�� ���� ID';
comment on column field_cards.game_id is '���� ID';
comment on column field_cards.card_id is 'ī�� ID';


-- �� ī�� ���̺�  // ���� �й���� ���� ī��
CREATE TABLE deck_cards (
    id NUMBER PRIMARY KEY,
    game_id NUMBER NOT NULL, -- ���� ID
    card_id NUMBER NOT NULL, -- ī�� ID
    CONSTRAINT fk_game_deck FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_card_deck FOREIGN KEY (card_id) REFERENCES card(id)
);

comment on column deck_cards.id is '�� ī�� ���� ID';
comment on column deck_cards.game_id is '���� ID';
comment on column deck_cards.card_id is 'ī�� ID';


-- ������� ���̺�   // ���� ��ȭ�� ���ӳ� �߿��� �ൿ�� ���
CREATE TABLE score_log (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    game_id NUMBER NOT NULL, -- ���� ID
    player_id NUMBER NOT NULL, -- �÷��̾� ID
    action VARCHAR2(50) NOT NULL, -- �ൿ ('ī�� ����', '���� �߰�' ��)
    score_change NUMBER DEFAULT 0, -- ���� ��ȭ��
    log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- �α� �ð�
    CONSTRAINT fk_game_log FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_player_log FOREIGN KEY (player_id) REFERENCES player(id)
);

comment on column score_log.id is '���� ��� ���� ID';
comment on column score_log.game_id is '���� ���� ID';
comment on column score_log.player_id is '����� ���� ID';
comment on column score_log.action is '�ൿ';
comment on column score_log.score_change is '���� ��ȭ��';
comment on column score_log.log_time is '�α� �ð�';





