-- 기존 테이블 존재 시 모두 삭제
DROP TABLE score_log CASCADE CONSTRAINTS;
DROP TABLE deck_cards CASCADE CONSTRAINTS;
DROP TABLE field_cards CASCADE CONSTRAINTS;
DROP TABLE player_cards CASCADE CONSTRAINTS;
DROP TABLE player CASCADE CONSTRAINTS;
DROP TABLE card CASCADE CONSTRAINTS;
DROP TABLE game_state CASCADE CONSTRAINTS;

------------------------------------------
-- 카드 테이블: 고스톱 게임에 사용되는 모든 카드 정보
------------------------------------------
CREATE TABLE card (
    id NUMBER PRIMARY KEY,
    month NUMBER(2) NOT NULL,               -- 카드가 속한 월 (1 ~ 12)
    type VARCHAR2(30 BYTE) NOT NULL,        -- 카드 타입 (광, 띠, 피, 쌍피 등) 한글 3바이트 고려
    point NUMBER(5, 2) DEFAULT 0,           -- 카드 점수
    is_special CHAR(1) DEFAULT 'N' CHECK (is_special IN ('Y', 'N')) -- 특수 카드 여부
);

COMMENT ON TABLE card IS '고스톱에 사용되는 카드 정보를 저장하는 테이블';
COMMENT ON COLUMN card.id IS '카드 고유 ID';
COMMENT ON COLUMN card.month IS '카드가 속한 월(1~12)';
COMMENT ON COLUMN card.type IS '카드 타입(광, 띠, 피 등)';
COMMENT ON COLUMN card.point IS '카드 점수 값';
COMMENT ON COLUMN card.is_special IS '특수 카드 여부 (Y/N)';


------------------------------------------
-- 플레이어 테이블: 게임 참여자의 정보(이름, 점수, 턴 여부, 유형) 관리
------------------------------------------
CREATE TABLE player (
    id NUMBER PRIMARY KEY,
    name VARCHAR2(150 BYTE) NOT NULL,       -- 플레이어 이름 (한글 3바이트 고려, 약 50자)
    score NUMBER DEFAULT 0,                 -- 플레이어 점수
    is_turn CHAR(1) DEFAULT 'N' CHECK (is_turn IN ('Y', 'N')),         -- 현재 턴 여부
    player_type VARCHAR2(30 BYTE) DEFAULT 'HUMAN' CHECK (player_type IN ('HUMAN','AI')) -- 플레이어 유형(HUMAN/AI), 여유 길이
);

COMMENT ON TABLE player IS '플레이어 정보를 저장하는 테이블(이름, 점수, 턴 여부, 유형)';
COMMENT ON COLUMN player.id IS '플레이어 고유 ID';
COMMENT ON COLUMN player.name IS '플레이어 이름';
COMMENT ON COLUMN player.score IS '플레이어 점수';
COMMENT ON COLUMN player.is_turn IS '현재 턴 여부(Y/N)';
COMMENT ON COLUMN player.player_type IS '플레이어 유형(HUMAN/AI)';


------------------------------------------
-- 플레이어 카드 테이블: 플레이어가 손패나 획득한 카드 정보 관리
------------------------------------------
CREATE TABLE player_cards (
    id NUMBER PRIMARY KEY,
    player_id NUMBER NOT NULL,
    card_id NUMBER NOT NULL,
    type VARCHAR2(30 BYTE) NOT NULL,  -- 카드 상태(HAND 또는 COLLECTED), 여유 길이
    CONSTRAINT fk_player FOREIGN KEY (player_id) REFERENCES player(id),
    CONSTRAINT fk_card FOREIGN KEY (card_id) REFERENCES card(id)
);

COMMENT ON TABLE player_cards IS '플레이어가 가지고 있는 카드(손패/획득카드)를 관리하는 테이블';
COMMENT ON COLUMN player_cards.id IS '플레이어-카드 매핑 고유 ID';
COMMENT ON COLUMN player_cards.player_id IS '플레이어 ID(외래키)';
COMMENT ON COLUMN player_cards.card_id IS '카드 ID(외래키)';
COMMENT ON COLUMN player_cards.type IS '카드 상태(HAND 또는 COLLECTED)';


------------------------------------------
-- 게임 상태 테이블: 게임 진행 상황(턴 순서, 종료 여부) 관리
------------------------------------------
CREATE TABLE game_state (
    id NUMBER PRIMARY KEY,
    turn_order NUMBER(1) DEFAULT 1,  -- 현재 턴 순서 (1: HUMAN, 2: AI)
    is_finished CHAR(1) DEFAULT 'N' CHECK (is_finished IN ('Y', 'N')) -- 게임 종료 여부
);

COMMENT ON TABLE game_state IS '현재 게임의 진행 상황(턴 순서, 종료 상태 등)을 저장하는 테이블';
COMMENT ON COLUMN game_state.id IS '게임 상태 고유 ID';
COMMENT ON COLUMN game_state.turn_order IS '현재 턴 순서(1: HUMAN, 2: AI)';
COMMENT ON COLUMN game_state.is_finished IS '게임 종료 여부(Y/N)';


------------------------------------------
-- 필드 카드 테이블: 게임 필드 위에 놓인 카드 목록 관리
------------------------------------------
CREATE TABLE field_cards (
    id NUMBER PRIMARY KEY,
    game_id NUMBER NOT NULL,
    card_id NUMBER NOT NULL,
    CONSTRAINT fk_game_field FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_card_field FOREIGN KEY (card_id) REFERENCES card(id)
);

COMMENT ON TABLE field_cards IS '게임 필드 위에 놓인 카드들을 관리하는 테이블';
COMMENT ON COLUMN field_cards.id IS '필드 카드 고유 ID';
COMMENT ON COLUMN field_cards.game_id IS '게임 상태 ID(외래키)';
COMMENT ON COLUMN field_cards.card_id IS '카드 ID(외래키)';


------------------------------------------
-- 덱 카드 테이블: 덱(패산)에 남아있는 카드 정보 관리
------------------------------------------
CREATE TABLE deck_cards (
    id NUMBER PRIMARY KEY,
    game_id NUMBER NOT NULL,
    card_id NUMBER NOT NULL,
    CONSTRAINT fk_game_deck FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_card_deck FOREIGN KEY (card_id) REFERENCES card(id)
);

COMMENT ON TABLE deck_cards IS '아직 뽑히지 않은 덱(패산) 카드를 관리하는 테이블';
COMMENT ON COLUMN deck_cards.id IS '덱 카드 고유 ID';
COMMENT ON COLUMN deck_cards.game_id IS '게임 상태 ID(외래키)';
COMMENT ON COLUMN deck_cards.card_id IS '카드 ID(외래키)';


------------------------------------------
-- 점수 로그 테이블: 점수 변화나 행동 이벤트 기록
------------------------------------------
CREATE TABLE score_log (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    game_id NUMBER NOT NULL,
    player_id NUMBER NOT NULL,
    action VARCHAR2(150 BYTE) NOT NULL, -- 행동(카드 내기, 점수 획득 등), 한글 3바이트 고려 약 50자
    score_change NUMBER DEFAULT 0,
    log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_game_log FOREIGN KEY (game_id) REFERENCES game_state(id),
    CONSTRAINT fk_player_log FOREIGN KEY (player_id) REFERENCES player(id)
);

COMMENT ON TABLE score_log IS '게임 내에서 발생한 점수 변화, 카드 액션 등의 이벤트를 기록하는 테이블';
COMMENT ON COLUMN score_log.id IS '점수 로그 고유 ID';
COMMENT ON COLUMN score_log.game_id IS '게임 상태 ID(외래키)';
COMMENT ON COLUMN score_log.player_id IS '플레이어 ID(외래키)';
COMMENT ON COLUMN score_log.action IS '행동(카드 내기, 점수 획득 등)';
COMMENT ON COLUMN score_log.score_change IS '점수 변화량';
COMMENT ON COLUMN score_log.log_time IS '로그 기록 시간';
